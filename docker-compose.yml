version: "3.9"

services:
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  app:
    build: .
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://postgres:admin@db:5432/AI_agent
    volumes:
      - .:/app
    ports:
      - "8000:8000"

  create_db:
    build: .
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://postgres:admin@db:5432/AI_agent
    volumes:
      - .:/app
    command: ["sh", "-c", "python wait_for_postgres.py db AI_agent postgres admin && python create_db.py"]

  seed_dbinit:
    build: .
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://postgres:admin@db:5432/dbinit
    volumes:
      - .:/app
    command: ["sh", "-c", "python wait_for_postgres.py db dbinit postgres admin && python retail_db/dbinit.py"]

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.22
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.22
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch


volumes:
  pgdata:
  minio_data:
  es_data:
  ollama_models:

